name: CI - Build Backend

on:
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.3-alpine
        env:
          POSTGRES_USER: ${{ vars.POSTGRES_TEST_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_TEST_PASSWORD }}
          POSTGRES_DB: pixshare_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - ${{ vars.TEST_DB_PORT }}:5432
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Java JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build and run Unit/Integration tests with Maven
        env:
          ACTIVE_SPRING_PROFILES: test
          TEST_DB_USER: ${{ vars.POSTGRES_TEST_USER }}
          TEST_DB_PASSWORD: ${{ vars.POSTGRES_TEST_PASSWORD }}
          TEST_DB_HOST: ${{ vars.TEST_DB_HOST }}
          TEST_DB_PORT: ${{ vars.TEST_DB_PORT }}
          JWT_SECRET_KEY: ${{ secrets.TEST_JWT_SECRET_KEY }}
          JWT_TOKEN_ISSUER: ${{ secrets.TEST_JWT_TOKEN_ISSUER }}
          JWT_TOKEN_EXPIRY_SECONDS: ${{ secrets.TEST_JWT_TOKEN_EXPIRY_SECONDS }}
          APP_BASE_URL: ${{ vars.TEST_APP_BASE_URL }}
          PASSWORD_RESET_TOKEN_SECRET_KEY: ${{ secrets.TEST_PASSWORD_RESET_TOKEN_SECRET_KEY }}
          PASSWORD_RESET_TOKEN_EXPIRY_SECONDS: ${{ vars.TEST_PASSWORD_RESET_TOKEN_EXPIRY_SECONDS }}
          PASSWORD_RESET_ATTEMPT_WINDOW_MAX_ATTEMPTS: ${{ secrets.TEST_PASSWORD_RESET_ATTEMPT_WINDOW_MAX_ATTEMPTS }}
          PASSWORD_RESET_ATTEMPT_WINDOW_DURATION_SECONDS: ${{ vars.TEST_PASSWORD_RESET_ATTEMPT_WINDOW_DURATION_SECONDS }}
          CLOUDINARY_URL: ${{ vars.TEST_CLOUDINARY_URL }}
          CLOUDINARY_UPLOAD_PRESET: ${{ vars.TEST_CLOUDINARY_UPLOAD_PRESET }}
          CLOUDINARY_UPLOAD_FOLDER: ${{ vars.TEST_CLOUDINARY_UPLOAD_FOLDER }}
          BREVO_API_KEY: ${{ secrets.TEST_BREVO_API_KEY }}
        run: mvn -B -ntp verify -Djib.skip=true